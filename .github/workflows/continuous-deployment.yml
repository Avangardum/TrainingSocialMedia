name: Continuous deployment

on:
  push:
    branches: [ "main", "actions-test" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --tag ${{ vars.DOCKER_IMAGE_TAG }}
    - name: Docker login
      uses: docker/login-action@v3.0.0
      with:
        username: ${{ vars.DOCKER_REGISTRY_USERNAME }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Push the Docker image
      run: docker push ${{ vars.DOCKER_IMAGE_TAG }}

  deploy:
  
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Copy Docker compose
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ vars.HOST }}
        username: ${{ vars.HOST_USERNAME }}
        password: ${{ secrets.HOST_PASSWORD }}
        source: docker-compose.yml
        target: ${{ vars.APP_HOST_PATH }}
    - name: Stop the app
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ vars.HOST }}
        username: ${{ vars.HOST_USERNAME }}
        password: ${{ secrets.HOST_PASSWORD }}
        script: systemctl stop ${{ vars.SERVICE_NAME }}
    - name: Pull Docker images
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ vars.HOST }}
        username: ${{ vars.HOST_USERNAME }}
        password: ${{ secrets.HOST_PASSWORD }}
        script: docker compose pull --file ${{ vars.APP_HOST_PATH }}/docker-compose.yml
    - name: Start the app
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ vars.HOST }}
        username: ${{ vars.HOST_USERNAME }}
        password: ${{ secrets.HOST_PASSWORD }}
        script: systemctl start ${{ vars.SERVICE_NAME }}
    - name: Verify that the app is running
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ vars.HOST }}
        username: ${{ vars.HOST_USERNAME }}
        password: ${{ secrets.HOST_PASSWORD }}
        script: systemctl is-active ${{ vars.SERVICE_NAME }}
